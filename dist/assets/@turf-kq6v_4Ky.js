function h(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if(r.type==="Feature"&&r.geometry!==null&&r.geometry.type==="Point")return r.geometry.coordinates;if(r.type==="Point")return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function w(r){return r.type==="Feature"?r.geometry:r}function m(r,e,s){if(s===void 0&&(s={}),!r)throw new Error("point is required");if(!e)throw new Error("polygon is required");var u=h(r),l=w(e),v=l.type,n=e.bbox,a=l.coordinates;if(n&&A(u,n)===!1)return!1;v==="Polygon"&&(a=[a]);for(var f=!1,t=0;t<a.length&&!f;t++)if(o(u,a[t][0],s.ignoreBoundary)){for(var i=!1,y=1;y<a[t].length&&!i;)o(u,a[t][y],!s.ignoreBoundary)&&(i=!0),y++;i||(f=!0)}return f}function o(r,e,s){var u=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var l=0,v=e.length-1;l<e.length;v=l++){var n=e[l][0],a=e[l][1],f=e[v][0],t=e[v][1],i=r[1]*(n-f)+a*(f-r[0])+t*(r[0]-n)===0&&(n-r[0])*(f-r[0])<=0&&(a-r[1])*(t-r[1])<=0;if(i)return!s;var y=a>r[1]!=t>r[1]&&r[0]<(f-n)*(r[1]-a)/(t-a)+n;y&&(u=!u)}return u}function A(r,e){return e[0]<=r[0]&&e[1]<=r[1]&&e[2]>=r[0]&&e[3]>=r[1]}export{m as b};
